package com.ict05.collection;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;

public class Ex06 {
	public static void main(String[] args) {
		// * List 인터페이스를 구현한 클래스들: Stack, ArrayList, Vector;
		
		// * ArrayList와 Vector : 배열과 흡사한 구조이지만 삽입, 삭제, 추가가 자유롭다.
		//						크기를 미리 지정하지 않아도 된다.
		//			두 개는 동기화 지원유무에 따라 다르다. ==>	ArrayList(동기화 지원x), Vector(동기화 지원=동시접속)
		
		// Set 구조는 순서가 없고 중복이 안됨.
		// List 구조는 저장하고 관리 ==> 순서가 있고, 중복이 가능함
		
		ArrayList<String> list = new ArrayList<String>();
		//list에 추가
		list.add("박찬호");
		list.add("류현진");
		list.add("손흥민");
		System.out.println(list);
		
		//list에 삽입
		list.add(1, "추신수");
		System.out.println(list);
		System.out.println("========================");
		
		Vector<String> vector = new Vector<String>();
		vector.add("둘리");
		vector.add("도우너");
		vector.addElement("또치");
		System.out.println(vector);
		
		vector.add(2, "희동이");
		System.out.println(vector);
		System.out.println("========================");
		
		
		if(list.contains("손흥민")) {
			// 위치값(인덱스값) 검색
			System.out.println(list.indexOf("손흥민") + "번째 위치"); //위치 검색
			// 해당위치에 존재하는 객체를 검색
			System.out.println(list.get(3)); //위치 검색
			System.out.println(list.get(list.indexOf("손흥민"))); //위치 검색
		} else {
			System.out.println("존재하지 않습니다.");
		}
		System.out.println(list.size() + "요소가 존재함.");
		System.out.println("========================");
		
		
		// 치환: set
		list.set(3, "이대호");
		System.out.println(list); // 손흥민 -> 이대호
		
		// 추신수가 있으면 추신수를 이종범으로 변경해라
		
		if(list.contains("추신수")) {
			list.set(list.indexOf("추신수"), "이종범");
		} else {
			System.out.println("없다.");
		}
		System.out.println("========================");
		
		
		
		// 하나씩 꺼내서(for, iterator)
		for (String k : list) {
			System.out.println(k);
		}
		System.out.println("========================");
		
		Iterator<String> it = list.iterator();
		while (it.hasNext()) {
			String msg = (String) it.next();
			System.out.println(msg);
		}
		
		
	}

}
